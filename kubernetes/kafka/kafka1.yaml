---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka1-pv
spec:
  capacity:
    storage: 15Gi  # 15Gi 크기의 저장소를 할당
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  awsElasticBlockStore:
    volumeID: vol-07b4b9e91d18a8bb5  # EBS의 실제 Volume ID
    fsType: ext4  # EBS에 사용할 파일 시스템 유형 (일반적으로 ext4 사용)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka1-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
  volumeName: kafka1-pv  # 여기서 PV의 이름을 명시적으로 지정
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka1
  labels:
    app: kafka1
spec:
  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"
  containers:
    - name: kafka
      image: wurstmeister/kafka:latest
      ports:
        - containerPort: 9092
      env:
        - name: KAFKA_ADVERTISED_LISTENER
          value: "PLAINTEXT://kafka:9092"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL
          value: "PLAINTEXT"
        - name: KAFKA_LISTENER_PORT
          value: "9092"
        - name: KAFKA_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_KRAFT_MODE
          value: "true"  # Zookeeper 없이 KRaft 모드로 Kafka 실행
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka1/data"
      resources:
        requests:
          memory: "2Gi"  # 요청 메모리 크기
          cpu: "1"       # 요청 CPU 크기
        limits:
          memory: "4Gi"  # 제한 메모리 크기
          cpu: "2"       # 제한 CPU 크기
      volumeMounts:
        - name: kafka1-storage
          mountPath: /var/lib/kafka1/data
  volumes:
    - name: kafka1-storage
      persistentVolumeClaim:
        claimName: kafka1-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka1
spec:
  selector:
    app: kafka1
  ports:
    - protocol: TCP
      port: 9092  # Kafka가 사용하는 포트
      targetPort: 9092  # Kafka Pod의 9092 포트로 전달
  type: NodePort
