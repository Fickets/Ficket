apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-user
  template:
    metadata:
      labels:
        app: spring-user
    spec:
      nodeSelector:
        role: worker2  # role=worker1 라벨이 있는 노드에서 실행
      containers:
        - name: spring-user
          image: choissu/ficket:springuser-latest
          ports:
            - containerPort: 8089
          command: ["java", "-Duser.timezone=Asia/Seoul", "-jar", "ficket-user-0.0.1-SNAPSHOT.jar"]
          envFrom: # ConfigMap에서 환경 변수 가져오기
            - configMapRef:
                name: user-config
          env:
            - name: USER_MYSQL_URL
              value: "jdbc:mysql://ec2-3-34-253-101.ap-northeast-2.compute.amazonaws.com/ficket"
            - name: WORKER1_REDIS_HOST
              value: "ec2-52-79-207-181.ap-northeast-2.compute.amazonaws.com"
            - name: WORKER1_REDIS_PORT
              value: "6379"
          volumeMounts:
            - name: config-volume
              mountPath: /config/application-common.yaml  # 컨테이너 내에서의 경로
              subPath: app-config.yaml
            - name: user-volume
              mountPath: /config/user-config.yaml
              subPath: user-config.yaml
      volumes:
        - name: user-spring-volume
          hostPath:
            path: /springdocker  # 실제 xvda1이 마운트된 경로
            type: Directory
        - name: config-volume
          configMap:
            name: common-config
        - name: user-volume
          configMap:
            name: user-config